@startuml
'left to right direction
skinparam {
    linetype ortho
}

'--------------------------------
' Household
'--------------------------------
Class Household {
    ' attributes --------------------------
    + id: int {readOnly}
    + name: str
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(name: str): Household
    + delete(): None
    + read_members(): List[User]
}

'--------------------------------
' User Domain
'--------------------------------
Class User {
    ' attributes --------------------------
    + id: int {readOnly}
    + household: Household {readOnly}
    + household_role: HouseholdRole
    - __email: str {readOnly}
    + username: str
    - __hashed_password: str
    + is_active: bool
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(household: Household, email: str, username: str, plain_password: str): User
    - __hash_password(plain_password): str
    + read_email(): str
    + update_username(new_username: str): None
    + update_email(new_email: str): None
    + delete(): None
    + reset_password(): None
    + login(password: str): bool
    + update_password(new_plain_password: str): None
    + verify_password(plain_password: str): bool
    + logout(): None
}
Class HouseholdRole {
    ' attributes --------------------------
    + id: int {readOnly}
    + name: str {readOnly}
}

' Relations inside Domain
User "0..*" -- "1" HouseholdRole : "assignee"

'--------------------------------
' Invitation
'--------------------------------
Class Invitation {
    ' attributes --------------------------
    + id: int {readOnly}
    + household: Household {readOnly}
    + household_role: HouseholdRole {readOnly}
    + email: str {readOnly}
    - __hashed_token: str
    + is_used: bool
    + created_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(household: Household, household_role: HouseholdRole, email: str, plain_token: str): Invitation
    - __hash_token(plain_token: str): str
    + verify_token(plain_token: str): bool
    + mark_as_used(): None
}

'--------------------------------
' AreaOfResponsibility
'--------------------------------
Class AreaOfResponsibility {
    ' attributes --------------------------
    + id: int {readOnly}
    + household: Household {readOnly}
    + assigned_to: User
    + title: str
    + description: str
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(household: Household, title: str, description: str): AreaOfResponsibility
    + delete(): None
}

'--------------------------------
' Project Domain
'--------------------------------
Class Project {
    ' attributes --------------------------
    + id: int {readOnly}
    + created_by: User {readOnly}
    + area_of_responsibility: AreaOfResponsibility
    + title: str
    + description: str
    + deadline: datetime.date
    + is_done: bool
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    + done_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(created_by: User, title: str, description: str): Project
    + delete(): None
    + read_goals(): List[Goal]
    + read_users(): List[User_Project]
    + read_tasks(): List[Task]
    + read_custom_lists(): List[CustomList]
    + read_shopping_lists(): List[ShoppingList]
}
Class ProjectGoal {
    ' attributes --------------------------
    + id: int {readOnly}
    + project: Project
    + title: str
    + description: str
    ' methods --------------------------
    + create(title: str, description: str): ProjectGoal
    + delete()
}
Class ProjectRole {
    ' attributes --------------------------
    + id: int {readOnly}
    + name: str {readOnly}
}
Class User_Project {
    ' attributes --------------------------
    + id: int {readOnly}
    + user: User
    + project: Project
    + role: ProjectRole
    ' methods --------------------------
    + create(user: User, project: Project, project_role: ProjectRole): User_Project
    + delete(): None
}

' Relations inside Domain
Project "1" *-- "0..*" ProjectGoal : "has"
User_Project "0..*" -- "1" Project : "involved in"
User_Project "0..*" -- "1" ProjectRole : "involved as"


'--------------------------------
' CustomList Domain
'--------------------------------
Class CustomList {
    ' attributes --------------------------
    + id: int {readOnly}
    + created_by: User {readOnly}
    + area_of_responsibility: AreaOfResponsibility
    + project: Project
    + title: str
    + description: str
    + is_checklist: bool
    + is_active: bool
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(created_by: User, title: str, description: str): CustomList
    + read_items(): List[CustomList_CustomListItem]
    + delete(): None

}
Class CustomListItem {
    ' attributes --------------------------
    + id: int {readOnly}
    + household: Household {readOnly}
    + name: str
    ' methods --------------------------
    + create(household: Household, name: str): CustomListItem
    + delete(): None
}
Class CustomList_CustomListItem {
    ' attributes --------------------------
    + id: int {readOnly}
    + list: CustomList
    + item: CustomListItem
    + parent: CustomList_CustomListItem
    + quantity: float
    + unit: str
    + note: str
    + is_done: bool
    ' methods --------------------------
    + create(list: CustomList, item: CustomListItem, quantity: float, unit: str, parent: CustomListItem): CustomList_CustomListItem
    + delete(): None
}

' Relations inside Domain
CustomList "1" *-- "0..*" CustomList_CustomListItem : "consists of"
CustomList_CustomListItem "0..*" -- "1" CustomListItem : "has a"
CustomList_CustomListItem "0..*" -- "0..1" CustomList_CustomListItem : "is child of"

'--------------------------------
' Task Domain
'--------------------------------
Class Task {
    ' attributes --------------------------
    + id: int {readOnly}
    + area_of_responsibility: AreaOfResponsibility
    + created_by: User {readOnly}
    + assigned_to: User
    + priority: Priority
    + status: Status
    + is_recurring: bool
    + title: str
    + description: str
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    + done_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(created_by: User, title: str, is_recurring: bool, description: str): Task
    + delete(): None
}
Class Priority {
    + id: int {readOnly}
    + name: str {readOnly}
}
Class Status {
    + id: int {readOnly}
    + name: str {readOnly}
}
Class Task_TaskHelper {
    ' attributes --------------------------
    + id: int {readOnly}
    + user: User
    + task: Task
    ' methods --------------------------
    + create(user: User, task: Task): Task_TaskHelper
    + delete(): None
}
Class RecurrenceCycle {
    + id: int {readOnly}
    + name: str {readOnly}
}
Class RecurringTask {
    ' attributes --------------------------
    + recurrence_cycle: RecurrenceCycle
    + recurrence_interval: int
    + next_reset_at: datetime.datetime
    + is_active: bool
    ' methods --------------------------
    + create(created_by: User, title: str, description: str): RecurringTask
    + delete(): None
}
Class NonRecurringTask {
    ' attributes --------------------------
    + project: Project
    + deadline: datetime.datetime
    ' methods --------------------------
    + create(created_by: User, title: str, description: str): NonRecurringTask
    + delete(): None
}

' Relations inside Domain
Task "0..*" -- "1" Priority : "has a"
Task "0..*" -- "1" Status : "has a"
Task_TaskHelper "0..*" -- "1" Task : "helps"

RecurringTask  "0..*" - "1" RecurrenceCycle : "has"

' Inheritance NonRecurring- and Recurring Tasks from Task
NonRecurringTask "0..1"--|> "1" Task : "is a" <<shared_id>>
RecurringTask "0..1" --|> "1" Task : "is a" <<shared_id>>

'--------------------------------
' ShoppingList Domain
'--------------------------------
Class ShoppingList {
    ' attributes --------------------------
    + id: int {readOnly}
    + created_by: User {readOnly}
    + project: Project
    + area_of_responsibility: AreaOfResponsibility
    + title: str
    + created_at: datetime.datetime {readOnly}
    + updated_at: datetime.datetime {readOnly}
    ' methods --------------------------
    + create(created_by: User, title: str): ShoppingList
    + read_items(): List[ShoppingList_ShoppingListItem]
    + delete(): None
}
Class ShoppingListItemCategory {
    ' attributes --------------------------
    + id: int {readOnly}
    + household: Household {readOnly}
    + name: str
    ' methods --------------------------
    + create(household: Household, name: str): ShoppingListItemCategory
    + read_items(): List[ShoppingListItem]
    + delete(): None
}
Class ShoppingListItem {
    ' attributes --------------------------
    + id: int {readOnly}
    + household: Household {readOnly}
    + category: ShoppingListItemCategory
    + title: str
    ' methods --------------------------
    + create(household: Household, title: str, category: ShoppingListItemCategory): ShoppingListItem
    + delete(): None
}
Class ShoppingList_ShoppingListItem {
    ' attributes --------------------------
    + id: int {readOnly}
    + list: ShoppingList
    + item: ShoppingListItem
    + quantity: float
    + unit: str
    + note: str
    + is_done: bool
    ' methods --------------------------
    + create(list: ShoppingList, item: ShoppingListItem, quantity: float, unit: str): ShoppingList_ShoppingListItem
    + delete(): None
}

' Relations inside Domain
ShoppingList "1" *-- "0..*" ShoppingList_ShoppingListItem : "consists of"
ShoppingList_ShoppingListItem "0..*" -- "1" ShoppingListItem : "has a"
ShoppingListItem "0..*" -- "1" ShoppingListItemCategory : "categorized by"

'--------------------------------
' Relations inside Models Domain (Cross-Sub-Domains)
'--------------------------------
User "0..*" ---* "1" Household : "belongs to"
Invitation "0..*" ---* "1" Household : "belongs to"
AreaOfResponsibility "0..*" ---* "1" Household : "belongs to"
CustomListItem "0..*" ---* "1" Household : "belongs to"
ShoppingListItem "0..*" ---* "1" Household : "belongs to"
ShoppingListItemCategory "0..*" ---* "1" Household : "belongs to"

Invitation "0..*" -- "1" HouseholdRole : "assigned"

User "1" --- "0..*" Task : "creator"
User "1" --- "0..*" Task : "assignee"
User "1" --- "0..*" Task_TaskHelper : "helps"
User "1" --- "0..*" Project : "creator"
User "1" --- "0..*" User_Project : "involved"
User "1" --- "0..*" CustomList : "creator"
User "1" --- "0..*" ShoppingList : "creator"
User "1" --- "0..*" AreaOfResponsibility : "assignee"

CustomList "0..*" --- "0..1" AreaOfResponsibility : "categorized by"
Task "0..*" --- "0..1" AreaOfResponsibility : "categorized by"
Project "0..*" --- "0..1" AreaOfResponsibility : "categorized by"
ShoppingList "0..*" --- "0..1" AreaOfResponsibility : "categorized by"

CustomList "0..*" ---o "0..1" Project : "belongs to"
NonRecurringTask "0..*" ---o "0..1" Project : "belongs to"
ShoppingList "0..*" ---o "0..1" Project : "belongs to"

@enduml